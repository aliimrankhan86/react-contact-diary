{"ast":null,"code":"import _toConsumableArray from \"/Users/aliimrankhan1/Downloads/react-form-validation/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/aliimrankhan1/Downloads/react-form-validation/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aliimrankhan1/Downloads/react-form-validation/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aliimrankhan1/Downloads/react-form-validation/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aliimrankhan1/Downloads/react-form-validation/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aliimrankhan1/Downloads/react-form-validation/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aliimrankhan1/Downloads/react-form-validation/src/ContactForm.js\";\nimport React from \"react\";\nimport ContactList from \"./ContactList\";\n\nvar ContactForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ContactForm, _React$Component);\n\n  function ContactForm(props) {\n    var _this;\n\n    _classCallCheck(this, ContactForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactForm).call(this, props));\n\n    _this.onContactDelete = function (e) {\n      e.preventDefault();\n      var currentElm = e.target.parentElement.childNodes[0].nodeValue;\n      console.log(currentElm);\n\n      var data = _toConsumableArray(_this.state.data);\n\n      console.log(data.splice(data.indexOf(currentElm), 1));\n      var spliceTest = data.splice(data.indexOf(currentElm), 1);\n      console.log(spliceTest); // console.log('the state of data is ', data)\n\n      _this.setState({\n        data: data\n      });\n    };\n\n    _this.onFormSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.firstname.length === 0 || _this.state.lastname.length === 0 || _this.state.contactno.length === 0) {\n        alert('Please insert data on all fields!');\n      } else {\n        var contactInfo = {\n          firstname: _this.state.firstname,\n          lastname: _this.state.lastname,\n          contactno: _this.state.contactno\n        };\n        console.log(contactInfo);\n\n        var data = _toConsumableArray(_this.state.data);\n\n        data.push(contactInfo);\n\n        _this.setState({\n          data: data,\n          firstname: \"\",\n          lastname: \"\",\n          contactno: \"\"\n        });\n      }\n    };\n\n    _this.onFirstNameInput = function (e) {\n      console.log(e.target.value);\n\n      _this.setState({\n        firstname: e.target.value\n      });\n    };\n\n    _this.onLastNameInput = function (e) {\n      console.log(e.target.value);\n\n      _this.setState({\n        lastname: e.target.value\n      });\n    };\n\n    _this.onContactNumberInput = function (e) {\n      console.log(e.target.value);\n\n      _this.setState({\n        contactno: e.target.value\n      });\n    };\n\n    _this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      contactno: \"\",\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(ContactForm, [{\n    key: \"render\",\n    value: function render() {\n      var display = {\n        display: this.props.display,\n        transition: display\n      };\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        style: display,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"form\",\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"First name\", React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.onFirstNameInput,\n        value: this.state.firstname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"last name\", React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.onLastNameInput,\n        value: this.state.lastname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Phone Number\", React.createElement(\"input\", {\n        type: \"tel\",\n        onChange: this.onContactNumberInput,\n        value: this.state.contactno,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Add contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))), React.createElement(ContactList, {\n        list: this.state.data,\n        delete: this.onContactDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ContactForm;\n}(React.Component);\n\nexport { ContactForm as default };","map":{"version":3,"sources":["/Users/aliimrankhan1/Downloads/react-form-validation/src/ContactForm.js"],"names":["React","ContactList","ContactForm","props","onContactDelete","e","preventDefault","currentElm","target","parentElement","childNodes","nodeValue","console","log","data","state","splice","indexOf","spliceTest","setState","onFormSubmit","firstname","length","lastname","contactno","alert","contactInfo","push","onFirstNameInput","value","onLastNameInput","onContactNumberInput","display","transition","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ContactList from \"./ContactList\";\n\n\nexport default class ContactForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            firstname: \"\",\n            lastname: \"\",\n            contactno: \"\",\n            data: []\n        }\n    }\n\n    onContactDelete = (e) => {\n        e.preventDefault();\n        const currentElm = e.target.parentElement.childNodes[0].nodeValue;\n        console.log(currentElm)\n        const data = [...this.state.data];\n        console.log(data.splice(data.indexOf(currentElm), 1))\n        const spliceTest = data.splice(data.indexOf(currentElm), 1)\n        console.log(spliceTest)\n\n        // console.log('the state of data is ', data)\n        this.setState({\n            data: data\n        })\n    }\n\n    onFormSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.firstname.length === 0 || this.state.lastname.length === 0 || this.state.contactno.length === 0) {\n            alert('Please insert data on all fields!')\n        }\n        else {\n            const contactInfo = {\n                firstname: this.state.firstname,\n                lastname: this.state.lastname,\n                contactno: this.state.contactno\n            }\n            console.log(contactInfo)\n            const data = [...this.state.data];\n            data.push(contactInfo)\n\n            this.setState({\n                data: data,\n                firstname: \"\",\n                lastname: \"\",\n                contactno: \"\"\n            })\n        }\n    }\n\n    onFirstNameInput = (e) => {\n        console.log(e.target.value)\n        this.setState({\n            firstname: e.target.value\n        })\n    }\n\n    onLastNameInput = (e) => {\n        console.log(e.target.value)\n        this.setState({\n            lastname: e.target.value\n        })\n    }\n\n    onContactNumberInput = (e) => {\n        console.log(e.target.value);\n        this.setState({\n            contactno: e.target.value\n        })\n    }\n\n    render() {\n        const display = {\n            display: this.props.display,\n            transition: display\n        }\n        return (\n            <div className=\"wrapper\" style={display}>\n                <div>\n                    <form className=\"form\" onSubmit={this.onFormSubmit} >\n                        <label>\n                            First name\n                        <input type=\"text\" onChange={this.onFirstNameInput} value={this.state.firstname} />\n                        </label>\n                        <label>\n                            last name\n                        <input type=\"text\" onChange={this.onLastNameInput} value={this.state.lastname} />\n                        </label>\n                        <label>\n                            Phone Number\n                        <input type=\"tel\" onChange={this.onContactNumberInput} value={this.state.contactno} />\n                        </label>\n                        <input type=\"submit\" value=\"Add contact\" />\n                    </form>\n                </div>\n                <ContactList list={this.state.data} delete={this.onContactDelete} />\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}